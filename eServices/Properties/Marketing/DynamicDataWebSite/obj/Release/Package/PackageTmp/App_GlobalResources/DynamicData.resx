<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="AllRecords" xml:space="preserve">
    <value>All Records</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="BackToHomePage" xml:space="preserve">
    <value>Back To Home Page</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="DateTime_RegularExpressionValidator_MessageFormat" xml:space="preserve">
    <value>Date and Time entered in field: [&lt;b&gt;{0}&lt;/b&gt;] is invalid!</value>
  </data>
  <data name="Date_RegularExpressionValidator_MessageFormat" xml:space="preserve">
    <value>Date entered in field: [&lt;b&gt;{0}&lt;/b&gt;] is invalid!</value>
  </data>
  <data name="Date_RequiredFieldValidator_MessageFormat" xml:space="preserve">
    <value>Date in field: [&lt;b&gt;{0}&lt;/b&gt;] is required!</value>
  </data>
  <data name="Date_Validator_MessageFormat" xml:space="preserve">
    <value>Date Value at: [&lt;b&gt;{0}&lt;/b&gt;] is invalid!</value>
  </data>
  <data name="Decimal_RegularExpressionValidator_MessageFormat" xml:space="preserve">
    <value>Decimal entered in field: [&lt;b&gt;{0}&lt;/b&gt;] is invalid!</value>
  </data>
  <data name="DelConfirm" xml:space="preserve">
    <value>Delete Confirm</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="EditItemTitleFormat" xml:space="preserve">
    <value>Edit entry at {0}</value>
  </data>
  <data name="EmptyRecords" xml:space="preserve">
    <value>Empty Records</value>
  </data>
  <data name="False" xml:space="preserve">
    <value>False</value>
  </data>
  <data name="FirstPage" xml:space="preserve">
    <value>First Page</value>
  </data>
  <data name="ItemDetailsTitleFormat" xml:space="preserve">
    <value>Entry from {0}</value>
  </data>
  <data name="LastPage" xml:space="preserve">
    <value>Last Page</value>
  </data>
  <data name="Months" xml:space="preserve">
    <value>Months</value>
  </data>
  <data name="NewItemTitleFormat" xml:space="preserve">
    <value>Add new entry to {0}</value>
  </data>
  <data name="NewRecord" xml:space="preserve">
    <value>New Record</value>
  </data>
  <data name="NextPage" xml:space="preserve">
    <value>Next Page</value>
  </data>
  <data name="NotSet" xml:space="preserve">
    <value>Not Set</value>
  </data>
  <data name="Null" xml:space="preserve">
    <value>Null</value>
  </data>
  <data name="Of" xml:space="preserve">
    <value>OF</value>
  </data>
  <data name="PageText" xml:space="preserve">
    <value>Page Text</value>
  </data>
  <data name="PreviousPage" xml:space="preserve">
    <value>Previous Page</value>
  </data>
  <data name="RegularExpressionValidator_MessageFormat" xml:space="preserve">
    <value>Value entered in field: [&lt;b&gt;{0}&lt;/b&gt;] is invalid!</value>
  </data>
  <data name="RequiredFieldValidator_MessageFormat" xml:space="preserve">
    <value>Field: [&lt;b&gt;{0}&lt;/b&gt;] is required!</value>
  </data>
  <data name="ResultPerPage" xml:space="preserve">
    <value>Result Per Page</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="ThereIsNoData" xml:space="preserve">
    <value>There Is No Data</value>
  </data>
  <data name="Time_RegularExpressionValidator_MessageFormat" xml:space="preserve">
    <value>Time entered in field: [&lt;b&gt;{0}&lt;/b&gt;] is invalid!</value>
  </data>
  <data name="True" xml:space="preserve">
    <value>True</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Update1" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="UpdateRecords" xml:space="preserve">
    <value>Update Records</value>
  </data>
  <data name="ValidationSummaryHeaderText" xml:space="preserve">
    <value>List of validation errors</value>
  </data>
  <data name="ValRequir" xml:space="preserve">
    <value>Requir Fields</value>
  </data>
  <data name="FileUpload_ToolTip" xml:space="preserve">
    <value>Upload &lt;b&gt;{0}&lt;/b&gt; files</value>
  </data>
  <data name="Integer_CompareValidator_MessageFormat" xml:space="preserve">
    <value>The field  [&lt;b&gt;{0}&lt;/b&gt;] must be a valid integer.</value>
  </data>
  <data name="Time_Validator_MessageFormat" xml:space="preserve">
    <value>Time value at field [&lt;b&gt;{0}&lt;/b&gt;] is invalid!</value>
  </data>
  <data name="UploadFile_FileTypeValidator_MessageFormat" xml:space="preserve">
    <value>&lt;b&gt;{0}&lt;/b&gt; is not a valid upload file type (only &lt;b&gt;{1}&lt;/b&gt; are supported).</value>
  </data>
  <data name="UploadImage_FileTypeValidator_MessageFormat" xml:space="preserve">
    <value>Upload Image Only</value>
  </data>
  <data name="WhereDropdownListFilter_NullTextFormat" xml:space="preserve">
    <value>[No '{0}']</value>
  </data>
  <data name="ItemDoesNotExist" xml:space="preserve">
    <value>Item does not exist.</value>
  </data>
  <data name="Decimal_RangeValidator_MessageFormat" xml:space="preserve">
    <value>The field {0} must be between {1} and {2}.</value>
  </data>
  <data name="Integer_RangeValidator_MessageFormat" xml:space="preserve">
    <value>The field {0} must be between {1} and {2}.</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="Error_CannotAddBecauseOfDuplication" xml:space="preserve">
    <value>Error happened while trying to add; Because of possible data duplication</value>
  </data>
  <data name="Error_CannotAddWithFollowingDetails" xml:space="preserve">
    <value>Error happened while trying to add. Error info:</value>
  </data>
  <data name="Error_CannotDeleteBecauseOf" xml:space="preserve">
    <value>Unable to delete because</value>
  </data>
  <data name="Error_CannotDeleteBecauseOfReletedRecords" xml:space="preserve">
    <value>Unable to delete because of some related dependencies</value>
  </data>
  <data name="Error_CannotUpdateBecauseOfDuplication" xml:space="preserve">
    <value>Error happened while trying to update. Error info:</value>
  </data>
  <data name="Error_CannotUpdateWithFollowingDetails" xml:space="preserve">
    <value>Error happened while trying to update data; Because of possible data duplication</value>
  </data>
  <data name="Filter" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="Print" xml:space="preserve">
    <value>Print</value>
  </data>
  <data name="Report" xml:space="preserve">
    <value>Report</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>To</value>
  </data>
  <data name="FullScreen" xml:space="preserve">
    <value>Full Screen</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>Hello</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Welcome</value>
  </data>
  <data name="CompleteProfile" xml:space="preserve">
    <value>Complete Profile !</value>
  </data>
  <data name="SiteName" xml:space="preserve">
    <value>Akaratak</value>
  </data>
  <data name="No_Records" xml:space="preserve">
    <value>&amp;nbsp; No Records</value>
  </data>
  <data name="Error_Generic" xml:space="preserve">
    <value>Threre has been an error please report to the administrator</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="Phone_MessageFormat" xml:space="preserve">
    <value>Phone Number must be Like: +123 45 6789</value>
  </data>
  <data name="Upload" xml:space="preserve">
    <value>Upload Images</value>
  </data>
  <data name="Range_Max_Description" xml:space="preserve">
    <value>Maximum Value Must be:</value>
  </data>
  <data name="Range_Min_Description" xml:space="preserve">
    <value>Minimum Value Must be :</value>
  </data>
  <data name="Join_Us" xml:space="preserve">
    <value>Join Us</value>
  </data>
  <data name="Image_Upload" xml:space="preserve">
    <value>Upload Image(s)</value>
  </data>
  <data name="Image_Uploaded" xml:space="preserve">
    <value>Image(s) Uploaded</value>
  </data>
  <data name="dmmy" xml:space="preserve">
    <value />
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Sitemap" xml:space="preserve">
    <value>Sitemap</value>
  </data>
  <data name="Keywords" xml:space="preserve">
    <value>Buy,rent,house,villa,mansion,details,realestate</value>
  </data>
</root>